services:
  nginx:
    image: nginx:alpine
    container_name: rocketchat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - rocketchat
    networks:
      - rocketchat

  mongodb:
    image: mongo:${MONGO_VERSION:-6.0}
    container_name: rocketchat-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb/mongod.conf:/etc/mongod.conf:ro
    command: mongod --config /etc/mongod.conf --oplogSize 128 --replSet rs0
    networks:
      - rocketchat
    healthcheck:
      test: |
        test $$(echo "rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]}).ok || rs.status().ok" | mongosh --quiet) -eq 1
      interval: 10s
      start_period: 30s
      timeout: 5s
      retries: 5
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:?Please set MONGO_ROOT_PASSWORD in .env file}
    security_opt:
      - no-new-privileges:true
    user: mongodb

  mongo-init-replica:
    image: mongo:${MONGO_VERSION:-6.0}
    container_name: rocketchat-mongo-init
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongosh mongodb:27017/rocketchat --authenticationDatabase admin -u ${MONGO_ROOT_USER:-admin} -p ${MONGO_ROOT_PASSWORD} --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'mongodb:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - rocketchat
    restart: "no"

  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${ROCKETCHAT_VERSION:-latest}
    container_name: rocketchat-app
    restart: unless-stopped
    depends_on:
      - mongodb
      - mongo-init-replica
    environment:
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/rocketchat?authSource=admin&replicaSet=rs0&ssl=false
      MONGO_OPLOG_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/local?authSource=admin&replicaSet=rs0&ssl=false
      ROOT_URL: ${ROOT_URL:?Please set ROOT_URL in .env file}
      PORT: 3000
      DEPLOY_METHOD: docker
      # Security settings
      OVERWRITE_SETTING_Show_Setup_Wizard: completed
      SETTING_Accounts_TwoFactorAuthentication_Enabled: true
      SETTING_API_Enable_Rate_Limiter: true
      SETTING_FileUpload_MaxFileSize: ${MAX_FILE_SIZE:-52428800}
      SETTING_Accounts_AllowAnonymousRead: false
      SETTING_Accounts_AllowAnonymousWrite: false
      # Performance settings
      SETTING_Log_Level: ${LOG_LEVEL:-1}
      SETTING_API_Rate_Limiter_Limit_Time_Ms: 60000
      SETTING_API_Rate_Limiter_Limit_Calls_Default: 10
      # Email settings
      MAIL_URL: ${MAIL_URL:-}
      SETTING_From_Email: ${FROM_EMAIL:-}
    volumes:
      - rocketchat_uploads:/app/uploads
      - rocketchat_scripts:/app/bundle/programs/server/assets/app/scripts
    networks:
      - rocketchat
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    user: "65534:65534"

volumes:
  mongodb_data:
  mongodb_config:
  rocketchat_uploads:
  rocketchat_scripts:
  nginx_logs:

networks:
  rocketchat:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
